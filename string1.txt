netg@DESKTOP-EBH0I8A:~/devnet/boot/boot-camp$ python3
Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 
>>> 
>>> 
>>> print("Hello world")
Hello world
>>> 
>>> 
>>> 
>>> text = "hello #$%^^sfuasdufasfadsgfguo*(*6789"
>>> 
>>> type(text)
<class 'str'>
>>> 
>>> 
>>> 
>>> device = "Router"
>>> 
>>> 
>>> device[0]
'R'
>>> device[1]
'o'
>>> device[2]
'u'
>>> device[3]
't'
>>> device[4]
'e'
>>> device[5]
'r'
>>> device[6]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> 
>>> 
>>> device[-1]
'r'
>>> device[-2]
'e'
>>> device[-3]
't'
>>> device[-4]
'u'
>>> device[-5]
'o'
>>> device[-6]
'R'
>>> device[-7]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: string index out of range
>>> 
>>> 
>>> 
>>> device[0:2]
'Ro'
>>> 
>>> device[2:5]
'ute'
>>> 
>>> device[0:5]
'Route'
>>> 
>>> 
>>> ip = "10.2.3.4"
>>> 
>>> ip = "10.2.3.4"
>>> 
>>> 
>>> ip[0:2]
'10'
>>> 
>>> ip[2]
'.'
>>> ip[3]
'2'
>>> 
>>> 
>>> ip[3:6]
'2.3'
>>> ip[3:5]
'2.'
>>> 
>>> ip[-1:-6]
''
>>> ip[-2:-6]
''
>>> ip[-6:2]
''
>>> ip[-6:-2]
'.2.3'
>>> 
>>> ip[-5:-2]
'2.3'
>>> 
>>> 
>>> 
>>> print(10)
10
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 
>>> 
>>> device
'Router'
>>> print(device)
Router
>>> device.upper()
'ROUTER'
>>> device.lower()
'router'
>>> 
>>> print(device)
Router
>>> 
>>> 
>>> updevice = device.upper()
>>> 
>>> updevice
'ROUTER'
>>> 
>>> 
>>> "Gigabit" == "gigabit"
False
>>> 
>>> 1 == True
True
>>> 
>>> 0 == False
True
>>> 
>>> "Gigabit" == "gigabit"
False
>>> 
>>> 
>>> 
>>> 
>>> intf = "Gigabit0/1"
>>> 
>>> if intf == "gigabit0/1":
...     print("Interface matched")
... else:
...     print("Interface NOT found"
... 
... 
... 
... )
... 
Interface NOT found
>>> 
>>> 
>>> if intf.lower() == "gigabit0/1":
...     print("Interface matched")
... else:
...     print("Interface NOT found"
... 
... )
... 
Interface matched
>>> 
>>> 
>>> 
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 
>>> 
>>> ip = "10.2.3.4"
>>> 
>>> 
>>> ip.startswith("10")
True
>>> 
>>> ip.startswith("10.")
True
>>> 
>>> if ip.startswith("10."):
...     print("Class A private ip")
... else:
...     print("Don't know")
... 
Class A private ip
>>> 
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 
>>> help(str.startswith)

>>> 
>>> help(str.startswith)

>>> exit()